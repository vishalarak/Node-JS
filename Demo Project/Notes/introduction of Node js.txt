# Introduction :  
                Node js is an open-source, cross platform JavsScript runtime environment that allows developmers to execute code outside of a web browser.
                It was initially created by Ryan Dahl in 2009 and has since gained widespread popularity in the world of server-side and backend development.


# Key Features of Node js :
                            1. JavaScript Runtime : Node js is built on the V8 JavaScript engine, which is the same engine used by the google chrome web browser.
                               This allows developmers to run JavaScript code on the server-side, which was traditionally used only for client-side scripting.

                            2. Server-Side Development : Node js is well-suited for building server-side applications, such as web servers, APIs(Application Program Interface), real-time applications and microservices.
                               Developmers can use it to create fast and scealable network applications.

                            3. Event-Driven and Non-Blocking : Node js is designed to be event-driven and non-blocking.
                               It uses an event loop to handle asynchronus operations, making it highly effitient for handling a large number of concurrent connections.
                               This non-blocking architecture allows Node js to handle I/O-Heavy tasks efficiently.

                            4. NPM(Node Package Manager) : Node js comes with a pakage manager called NPM, which is one of largest ecosystems of open-source libraries and modules available.
                               NPM simplifies dependancy management and allows developmers to easily integrate third-party pakages into their Node js applications.

                            5. Cross-Platform : node js is available on various operating system, including Windoes, macOS and linux, making it a versatile choice for server-side development.

                            6. Community and Ecosystem : Node js has a large and active community od developmers and a vasy ecosystem of libraries and modules.
                               This Community-driven approach has led to the development od mmany tools and resources for Node js developmers.

                            7. Scalability : Due to its non-blocking nature and event-driven architecture, Node js is well-suited for building highly scalable applications that can handle a large number of concurrent users.

                            8. Real-Time Applications : Node js is often used to build real-time applications like chat applications, online gaming platforms, and collaborative tools beacuse ot its ability to handle simultaneous connections efficiently.

# Why Node.js?
            Node.js uses asynchronous programming.
            A common task for a web server can be to open a file on the server and return the content to the client.

# How PHP or ASP handles a file request :
                                        1. Sends the task to the computer's file system.
                                        2. Waits while the file system opens and reads the file.
                                        3. Returns the content to the client.
                                        4. Ready to handle the next request.

# How Node.js handles a file request :
                                        1. Sends the task to the computer's file system.
                                        2. Ready to handle the next request.
                                        3. When the file system has opened and read the file, the server returns the content to the client.


# Node.js eliminates the waiting, and simply continues with the next request.

# Node.js run single-threaded, non-blocking,asynchronous programming, which is very memory efficient.


# What can node.js do?
                        * Node.js can generate dynamic page content.
                        * Node.js can create, open, read, write, delete, and ,close file on the server.
                        * Node.js can collect from data.
                        * node.js can add, delete, modify data in your database.

# What is Node.js file?
                        * Node.js files contain tasks that will be executed on certain events.
                        * A typial event is someone trying to access a port on the erver.
                        * Node,js files must be initiated on the server before having any effect.
                        * Node.js files have extension ".js".
